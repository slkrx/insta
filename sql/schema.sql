CREATE TABLE users (
	username VARCHAR(20) PRIMARY KEY,
	fullname VARCHAR(40) NOT NULL,
	email VARCHAR(40),
	filename VARCHAR(128) NOT NULL,
	password VARCHAR(256),
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE posts (
	postid SERIAL PRIMARY KEY,
	filename VARCHAR(128) NOT NULL,
	owner VARCHAR(20),
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT fk_posts_owner FOREIGN KEY (owner) REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE following (
	username1 VARCHAR(20),
	username2 VARCHAR(20),
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(username1, username2),
	CONSTRAINT fk_following_username1 FOREIGN KEY (username1) REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_following_username2 FOREIGN KEY (username2) REFERENCES users (username) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE comments (
	commentid SERIAL PRIMARY KEY,
	owner VARCHAR(20),
	postid INTEGER,
	text VARCHAR(1024),
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	CONSTRAINT fk_comments_owner FOREIGN KEY (owner) REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_comments_postid FOREIGN KEY (postid) REFERENCES posts (postid) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE likes (
	owner VARCHAR(20),
	postid INTEGER,
	created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY(owner, postid),
	CONSTRAINT fk_likes_owner FOREIGN KEY (owner) REFERENCES users(username) ON DELETE CASCADE ON UPDATE CASCADE,
	CONSTRAINT fk_likes_postid FOREIGN KEY (postid) REFERENCES posts (postid) ON DELETE CASCADE ON UPDATE CASCADE
);